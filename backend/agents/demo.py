# import google.generativeai.types.generation_types
# from agent import validator
# import dbHandler as db
# import fileHandler as fh

# dev = dev_agent()


# project_data = db.get_project_data("Health_Website")
# input = {
#     "project_name": project_data["project_name"],
#     "project_description": project_data["project_description"],
#     "webpage_names": project_data["webpage_names"]
# }
# print("-------------------------------------------------------")
# for i in range(project_data["no_of_webpages"]):

#     input["webpage"] = project_data["webpage_names"][i]
#     input["webpage_description"] = project_data["webpage_descriptions"][i]

#     try:
#         dev_response = dev.chainquery(input)

#     except google.generativeai.types.generation_types.StopCandidateException:
#         print("Generation process stopped due to a stop candidate.")
#         # psudo query to trick the model about reciation
#         temp = dev.query("what is my last response")
#         dev_response = dev.chainquery(input)

#     print("response generated by dev agent")
#     # just to make it look good remove later
#     dev_response.join(
#         "\n-------------------------------------------------------")
#     fh.write_string_to_file("output", "txt", dev_response)
#     print("write to file done")



import google.generativeai.types.generation_types
#import validator agent from agent
from agent import validator 

v=validator()
print(v.chainquery({"response":"Heyyyy"}))